Parameters:
  RoleTempName:
    Description: Name of the base stack with all infra resources
    Type: String
    Default: cicds3role
  MyIP:
    Type: String
  KeyName:
    Type: String
  InstanceType:
    Type: String
    Default: t2.micro

Mappings:
  AmiRegionMap:
    us-east-1:
      AMI: ami-052efd3df9dad4825
    us-east-2:
      AMI: ami-02f3416038bdb17fb

Resources:
  JenkinsInst:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AmiRegionMap
        - !Ref AWS::Region
        - AMI
      Tags:
        - Key: "Name"
          Value: !Join
            - ""
            - - "Jenkins in "
              - !Ref AWS::Region
      SecurityGroups:
        - !Ref JenkinsSG
      IamInstanceProfile:
        Fn::ImportValue:
          Fn::Sub: "${RoleTempName}-ncloudS3RoleProfileName"
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash
          sudo apt update
          sudo apt install openjdk-8-jdk -y
          sudo apt install maven git wget unzip -y
          sudo apt install awscli -y
          wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
          sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
          sudo apt-get update
          sudo apt-get install jenkins -y
          sleep 10
          systemctl stop jenkins
          sleep 10
          chown jenkins.jenkins /var/lib/jenkins -R
          reboot
  JenkinsSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: JenkinsSG
      GroupDescription: Allow SSH & HTTP from myip
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref MyIP

        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/0

Outputs:
  MyEC2InstancePublicIP:
    Value: !GetAtt JenkinsInst.PublicIp
  MyEC2InstancePrivateIP:
    Value: !GetAtt JenkinsInst.PrivateIp
  MyEC2InstanceID:
    Value: !Ref JenkinsInst
  JenkSecurityGroupId:
    Description: Security Group 1 ID
    Value:
      Fn::GetAtt:
        - JenkinsSG
        - GroupId
    Export:
      Name: jenk-SGID